/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package game_of_life;

import java.util.ArrayList;
import java.util.Random;

import game_of_life.models.Cell;
import game_of_life.utils.Constants;
import game_of_life.utils.GameOfLife;
import game_of_life.views.AppController;
import javafx.animation.AnimationTimer;
import javafx.application.Application;
import javafx.application.Platform;
import javafx.event.EventHandler;
import javafx.scene.Scene;
import javafx.stage.Stage;
import javafx.stage.WindowEvent;

public class App extends Application {

    private int amount = 768;
    private int cols = amount / 24;
    private int rows = amount / 32;
    private ArrayList<ArrayList<Cell>> cells = new ArrayList<ArrayList<Cell>>();
    private GameOfLife gol;
    private AppController controller;

    @Override
    public void start(Stage primaryStage) throws Exception {
        controller = new AppController(cols, rows);
        gol = new GameOfLife();
        initCells();
        AnimationTimer timer = new AnimationTimer() {
            private long lastUpdate = 0;

            @Override
            public void handle(long now) {
                if (now - lastUpdate >= Constants.TIMEOUT) {
                    cells = gol.compute(cells);
                    controller.display(cells);
                    lastUpdate = now;
                }
            }
        };
        timer.start();
        controller.startBtn.setOnAction((event) -> {
            timer.start();
            controller.stopBtn.setDisable(false);
            controller.startBtn.setDisable(true);
        });
        controller.stopBtn.setOnAction((event) -> {
            timer.stop();
            controller.stopBtn.setDisable(true);
            controller.startBtn.setDisable(false);
        });
        controller.restartBtn.setOnAction((event) -> {
            timer.stop();
            cells = new ArrayList<ArrayList<Cell>>();
            initCells();
            controller.stopBtn.setDisable(false);
            controller.startBtn.setDisable(true);
            timer.start();
        });

        // Clean up resources on exit
        primaryStage.setOnCloseRequest(new EventHandler<WindowEvent>() {
            @Override
            public void handle(WindowEvent t) {
                cells = null;
                Platform.exit();
                System.exit(0);
            }
        });
        primaryStage.setTitle("Grid");
        primaryStage.setScene(new Scene(controller));
        // primaryStage.setResizable(false);
        primaryStage.show();
    }

    /**
     * Initialize the two dimensional Cell array
     */
    private void initCells() {
        Random rand = new Random();
        for (int i = 0; i < cols; i++) {
            ArrayList<Cell> newCells = new ArrayList<>();
            for (int j = 0; j < rows; j++) {
                newCells.add(new Cell(rand.nextInt(2)));
            }
            cells.add(newCells);
        }
    }

    public static void main(String[] args) {
        launch(args);
    }
}
